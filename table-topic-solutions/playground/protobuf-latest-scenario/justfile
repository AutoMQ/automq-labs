set working-directory := ".."
SCHEMA_REGISTRY_URL := "http://schema-registry:8081"

default: help

help:
    @echo "Protobuf latest-schema Scenario (raw + by_latest_schema)"
    @echo "  register                                Register sample protobuf schemas (required)"
    @echo "  create-product-topic [topic]            default: product (subject+messageFullName)"
    @echo "  create-user-topic [topic]               default: user    (subject+messageFullName)"
    @echo "  send-product-raw [topic]                default: product"
    @echo "  send-user-raw [topic]                   default: user"
    @echo "  query-product                           Query product table"
    @echo "  query-user                              Query user table"

register:
    @echo "Registering sample protobuf schemas (user/product) to Schema Registry..."
    docker compose -f docker-compose.yml exec -w /home/kafka-client/sample/protobuf-sample kafka-client mvn schema-registry:register@register


create-product-topic topic='product' subject='product-value' message_full_name='examples.clients.proto.ProductData':
    docker exec automq /opt/automq/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 \
      --create --topic {{topic}} --partitions 16 \
      --config automq.table.topic.enable=true \
      --config automq.table.topic.commit.interval.ms=2000 \
      --config automq.table.topic.convert.value.type=by_latest_schema \
      --config automq.table.topic.transform.value.type=flatten \
      --config automq.table.topic.namespace=default \
      --config automq.table.topic.convert.value.subject={{subject}} \
      --config automq.table.topic.convert.value.message.full.name={{message_full_name}} || true

create-user-topic topic='user' subject='user-value' message_full_name='examples.clients.proto.UserData':
    docker exec automq /opt/automq/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 \
      --create --topic {{topic}} --partitions 16 \
      --config automq.table.topic.enable=true \
      --config automq.table.topic.commit.interval.ms=2000 \
      --config automq.table.topic.convert.value.type=by_latest_schema \
      --config automq.table.topic.transform.value.type=flatten \
      --config automq.table.topic.namespace=default \
      --config automq.table.topic.convert.value.subject={{subject}} \
      --config automq.table.topic.convert.value.message.full.name={{message_full_name}} || true

send-product-raw topic='product':
    @echo "Producing Protobuf raw (product) to {{topic}}"
    bash protobuf-latest-scenario/scripts/produce-protobuf-raw.sh {{topic}} product

send-user-raw topic='user':
    @echo "Producing Protobuf raw (user) to {{topic}}"
    bash protobuf-latest-scenario/scripts/produce-protobuf-raw.sh {{topic}} user


query-product:
    @just trino-sql 'SELECT * FROM iceberg.default.product LIMIT 20'

query-user:
    @just trino-sql 'SELECT * FROM iceberg.default."user" LIMIT 20'
