apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "automq-benchmark.fullname" . }}
  labels:
    {{- include "automq-benchmark.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "automq-benchmark.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "automq-benchmark.selectorLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: automq-benchmark
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "automq-benchmark.fullname" . }}-auth
                  key: username
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "automq-benchmark.fullname" . }}-auth
                  key: password
            - name: KAFKA_HEAP_OPTS
              value: "{{ .Values.env.kafkaHeapOpts }}"
            - name: SECURITY_PROTOCOL
              value: "{{ .Values.env.securityProtocol }}"
            - name: SASL_MECHANISM
              value: "{{ .Values.env.saslMechanism }}"
            - name: BOOTSTRAP_SERVER
              value: "{{ .Values.env.bootstrapServer }}"
            - name: PRODUCER_CONFIGS
              value: "{{ .Values.env.producerConfigs }}"
            - name: CONSUMER_CONFIGS
              value: "{{ .Values.env.consumerConfigs }}"
            - name: TOPICS
              value: "{{ .Values.env.topics }}"
            - name: PARTITIONS_PER_TOPIC
              value: "{{ .Values.env.partitionsPerTopic }}"
            - name: PRODUCERS_PER_TOPIC
              value: "{{ .Values.env.producersPerTopic }}"
            - name: GROUPS_PER_TOPIC
              value: "{{ .Values.env.groupsPerTopic }}"
            - name: CONSUMERS_PER_GROUP
              value: "{{ .Values.env.consumersPerGroup }}"
            - name: RECORD_SIZE
              value: "{{ .Values.env.recordSize }}"
            - name: SEND_RATE
              value: "{{ .Values.env.sendRate }}"
            - name: WARMUP_DURATION
              value: "{{ .Values.env.warmupDuration }}"
            - name: TEST_DURATION
              value: "{{ .Values.env.testDuration }}"
          command: ["/bin/sh", "-lc"]
          args:
            - |
              set -eu
              SASL_CONFIG="/tmp/client-sasl.properties"
              cat > "$SASL_CONFIG" <<EOL
              security.protocol=${SECURITY_PROTOCOL}
              sasl.mechanism=${SASL_MECHANISM}
              sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${USERNAME}" password="${PASSWORD}";
              EOL
              AUTOMQ_BIN="{{ .Values.automqBin }}"
              exec "$AUTOMQ_BIN" \
                --bootstrap-server "$BOOTSTRAP_SERVER" \
                --producer-configs "$PRODUCER_CONFIGS" \
                --common-config-file "$SASL_CONFIG" \
                --consumer-configs "$CONSUMER_CONFIGS" \
                --topics "$TOPICS" \
                --partitions-per-topic "$PARTITIONS_PER_TOPIC" \
                --producers-per-topic "$PRODUCERS_PER_TOPIC" \
                --groups-per-topic "$GROUPS_PER_TOPIC" \
                --consumers-per-group "$CONSUMERS_PER_GROUP" \
                --record-size "$RECORD_SIZE" \
                --send-rate "$SEND_RATE" \
                --warmup-duration "$WARMUP_DURATION" \
                --test-duration "$TEST_DURATION" \
                --reset
          resources:
            {{- toYaml .Values.resources | nindent 12 }}