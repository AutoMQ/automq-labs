global:
  cloudProvider:
    name: aws
    credentials: static://?accessKey=${accessKey}&secretKey=${secretKey}
  config: |
    s3.ops.buckets=1@s3://${ops-bucket}?region=${region}&endpoint=${endpoint}
    s3.data.buckets=0@s3://${data-bucket}?region=${region}&endpoint=${endpoint}
    # EBS WAL
    s3.wal.path=0@block:///dev/wal?iobandwidth=131072000&iodepth=8&iops=3000&capacity=2147483648
    # if you choose S3 WAL, replace the following with your bucket config.
    # s3.wal.path=0@s3://${data-bucket}?region=${region}&endpoint=${endpoint}

#  ----- node affinities -----
#  nodeAffinities:
#    - key: "eks.amazonaws.com/nodegroup"
#      values:
#        - "${your-node-group-name}"
#    - key: "node.kubernetes.io/instance-type"
#      values:
#        - "r6in.large"

controller:
  create: true
  replicas: 3
  resources:
    requests:
      cpu: "1000m"
      memory: "12Gi"
    limits:
      cpu: "2000m"
      memory: "16Gi"
  persistence:
    metadata:
      enabled: true
      storageClass: "gp2"
      size: "20Gi"
    wal:
      enabled: true
      # gp2 is the default storage class in AWS EKS.
      # If you're using a different storage class, please update it here.
      # Similar to Apache Kafka, AutoMQ requires a small disk to store metadata.
      storageClass: "gp2"
      size: "20Gi"
  env:
    - name: "KAFKA_JVM_PERFORMANCE_OPTS"
      value: "-server -XX:+UseZGC -XX:ZCollectionInterval=5"
    - name: "KAFKA_OPTS"
      value: "-XX:+ExitOnOutOfMemoryError -XX:+HeapDumpOnOutOfMemoryError"
    - name: "KAFKA_HEAP_OPTS"
      value: "-Xmx6g -Xms6g -XX:MaxDirectMemorySize=6g -XX:MetaspaceSize=96m"
      # replace the following with your bucket config.
    - name: "KAFKA_S3_ACCESS_KEY"
      value: "${accessKey}"
    - name: "KAFKA_S3_SECRET_KEY"
      value: "${secretKey}"
broker:
  create: true
  replicas: 1
  resources:
    requests:
      cpu: "1000m"
      memory: "12Gi"
    limits:
      cpu: "2000m"
      memory: "16Gi"
  persistence:
    wal:
      enabled: true
      # gp2 is the default storage class in AWS EKS.
      # If you're using a different storage class, please update it here.
      # Similar to Apache Kafka, AutoMQ requires a small disk to store metadata.
      storageClass: "gp2"
      size: "20Gi"
  env:
    - name: "KAFKA_JVM_PERFORMANCE_OPTS"
      value: "-server -XX:+UseZGC -XX:ZCollectionInterval=5"
    - name: "KAFKA_OPTS"
      value: "-XX:+ExitOnOutOfMemoryError -XX:+HeapDumpOnOutOfMemoryError"
    - name: "KAFKA_HEAP_OPTS"
      value: "-Xmx6g -Xms6g -XX:MaxDirectMemorySize=6g -XX:MetaspaceSize=96m"
      # replace the following with your bucket config.
    - name: "KAFKA_S3_ACCESS_KEY"
      value: "${accessKey}"
    - name: "KAFKA_S3_SECRET_KEY"
      value: "${secretKey}"

# ---- LoadBalancer ------
externalAccess:
  controller:
    enabled: true
    service:
      loadBalancerAnnotations:
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
      extraPorts:
        - name: "tcp-9092"
          port: 9092
          protocol: "TCP"
          targetPort: 9092
